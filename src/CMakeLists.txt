# cmake for fractl src subdirs

project(fractl)

# compile definitions

add_definitions(-std=c++11)

# find the packages

find_package(LROSE REQUIRED)
find_package(LibZip REQUIRED)
find_package(GeographicLib REQUIRED)
find_package(Eigen3 REQUIRED)

# includes

include_directories(${LROSE_PREFIX}/include)
include_directories(${EIGEN3_INCLUDE_DIR})
include_directories(/usr/local/include)

# Link

link_directories(${LROSE_PREFIX}/lib)
link_directories(/usr/lib/x86_64-linux-gnu/hdf5/serial)
link_directories(/usr/local/lib)

# location of bin as it is built

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)

# build app

add_executable (
  ${PROJECT_NAME}
  Args.cc
  Filters.cc
  Fractl.cc
  Interps.cc
  LeiseFilter.cc
  LeiseInterp.cc
  Params.cc # automatically generated by a custom command from the LROSE package
  RadarWindInterp.cc
  Utils.cc
  calcWinds.cc
  readPreGridded.cc
  readRadx.cc
  writeNetCdf.cc
  )

# link

target_link_libraries(${PROJECT_NAME} ${GeographicLib_LIBRARIES})
target_link_libraries(${PROJECT_NAME} ${LROSE_LIBRARIES})
target_link_libraries(${PROJECT_NAME} bz2)

# install

set(INSTALL_PREFIX $ENV{FRACTL_INSTALL_DIR})

if(NOT INSTALL_PREFIX)
  set(INSTALL_PREFIX ${LROSE_PREFIX})
endif(NOT INSTALL_PREFIX)

install(TARGETS ${PROJECT_NAME} DESTINATION ${INSTALL_PREFIX}/bin)

